/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int widthOfBinaryTree(TreeNode* root) {
        if(!root) return 0;
        queue<pair<TreeNode*,int>>q;
        q.push({root,0});
        int ans=0;
        while(!q.empty())
        {
            int count=q.size();
            int mn=INT_MAX;
            int mx=INT_MIN;
            for(int i=0;i<count;i++)
            {
                TreeNode *p=q.front().first;
                int x=q.front().second;
                q.pop();
                mx=max(mx,x);
                mn=min(mn,x);
                if(p->left)
                {
                    q.push({p->left,(long long)2*x+1});
                }
                if(p->right)
                {
                    q.push({p->right,(long long)2*x+2});
                }
            }
            ans=max(ans,abs(mx-mn+1));
        }
        return ans;
    }
};
